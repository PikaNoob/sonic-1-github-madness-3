; =========================================================================================================================================================
; MegaDrive macros
; =========================================================================================================================================================
clrRAM		macro	starta, enda
		local	endaddr
		if narg<2
endaddr			EQUS	"\starta\_End"
		else
endaddr			EQUS	"\enda"
		endif

		moveq	#0,d0

		if ((\starta)&$8000)=0
			lea	\starta,a1
		else
			lea	(\starta).w,a1
		endif
		if (\starta)&1
			move.b	d0,(a1)+
		endif

		move.w	#(((\endaddr)-(\starta))-((\starta)&1))>>2-1,d1
.Clear\@:	move.l	d0,(a1)+
		dbf	d1,.Clear\@

		if (((\endaddr)-(\starta))-((\starta)&1))&2
			move.w	d0,(a1)+
		endif
		if (((\endaddr)-(\starta))-((\starta)&1))&1
			move.b	d0,(a1)+
		endif
		endm
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; Disable interrupts
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; ARGUMENTS:
;	Nothing
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; RETURNS:
;	Nothing
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
intsOff		macros
		ori	#$700,sr
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; Enable interrupts
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; ARGUMENTS:
;	Nothing
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; RETURNS:
;	Nothing
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
intsOn		macros
		andi	#$F8FF,sr

; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; VDP command instruction
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; ARGUMENTS:
;	addr	- Address in VDP memory
;	type	- Type of VDP memory
;	rwd	- VDP command
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; RETURNS:
;	Nothing
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
VRAM		EQU	%100001		; VRAM
CRAM		EQU	%101011		; CRAM
VSRAM		EQU	%100101		; VSRAM
READ		EQU	%001100		; VDP read
WRITE		EQU	%000111		; VDP write
DMA		EQU	%100111		; VDP DMA
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
vdpCmd		macro	ins, addr, type, rwd, end, end2
		if narg=5
			\ins	#((((\type&\rwd)&3)<<30)|((\addr&$3FFF)<<16)|(((\type&\rwd)&$FC)<<2)|((\addr&$C000)>>14)), \end
		elseif narg>=6
			\ins	#((((\type&\rwd)&3)<<30)|((\addr&$3FFF)<<16)|(((\type&\rwd)&$FC)<<2)|((\addr&$C000)>>14))\end, \end2
		else
			\ins	((((\type&\rwd)&3)<<30)|((\addr&$3FFF)<<16)|(((\type&\rwd)&$FC)<<2)|((\addr&$C000)>>14))
		endif
		endm
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; VDP DMA from 68000 memory to VDP memory
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; ARGUMENTS:
;	src	- Source address in 68000 memory
;	dest	- Destination address in VDP memory
;	len	- Length of data in bytes
;	type	- Type of VDP memory
;	a6.l	- VDP control port
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; RETURNS:
;	Nothing
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
dma68k		macro	src, dest, len, type
		move.l	#$94009300|((((\len)/2)&$FF00)<<8)|(((\len)/2)&$FF),(a6)
		move.l	#$96009500|((((\src)/2)&$FF00)<<8)|(((\src)/2)&$FF),(a6)
		move.w	#$9700|(((\src)>>17)&$7F),(a6)
		vdpCmd	move.w, \dest, \type, DMA, >>16, (a6)
		vdpCmd	move.w, \dest, \type, DMA, &$FFFF, -(sp)
		move.w	(sp)+,(a6)
		endm
; ---------------------------------------------------------------------------------------------------------------------------------------------------------